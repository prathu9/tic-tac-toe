{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","handleClick","i","squares","state","slice","xisNext","setState","renderSquare","status","winner","lines","length","a","b","c","calculateWinner","this","React","Component","Game","alert","ReactDOM","render","document","getElementById"],"mappings":"0NAwBMA,G,MAAS,SAACC,GACZ,OACE,wBAAQC,UAAU,SACdC,QAAWF,EAAME,QADrB,SAGGF,EAAMG,UAKTC,E,kDACJ,WAAYJ,GAAO,IAAD,8BAChB,cAAMA,IASRK,YAAc,SAACC,GACb,IAAMC,EAAU,EAAKC,MAAMD,QAAQE,QACnCF,EAAQD,GAAK,EAAKE,MAAME,QAAQ,IAAI,IACpC,EAAKC,SAAS,CAACJ,QAAQA,EACRG,SAAU,EAAKF,MAAME,WAdpB,EAiBlBE,aAAe,SAACN,GACd,OAAQ,cAACP,EAAD,CACEI,MAAO,EAAKK,MAAMD,QAAQD,GAC1BJ,QAAW,WAAK,EAAKG,YAAYC,OAlB3C,EAAKE,MAAQ,CACXD,QAAS,CAAC,KAAM,KAAM,KACZ,KAAM,KAAM,KACZ,KAAM,KAAM,MACtBG,SAAS,GANK,E,qDAyBhB,IACIG,EADEC,EAxDc,SAACP,GAWvB,IAVA,IAAMQ,EAAQ,CACd,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEGT,EAAE,EAAGA,EAAES,EAAMC,OAAQV,IAAI,CAAC,IAAD,cACfS,EAAMT,GADS,GACxBW,EADwB,KACtBC,EADsB,KACpBC,EADoB,KAE/B,GAAGZ,EAAQU,IAAMV,EAAQU,KAAKV,EAAQW,IAAMX,EAAQU,KAAOV,EAAQY,GACjE,OAAOZ,EAAQU,GAGnB,OAAO,KAuCUG,CAAgBC,KAAKb,MAAMD,SAQ1C,OALIM,EADDC,EACO,UAAMA,EAAN,cAEA,uBAAmBO,KAAKb,MAAME,QAAQ,IAAI,KAIlD,gCACE,qBAAKT,UAAU,SAAf,SAAyBY,IACzB,sBAAKZ,UAAU,YAAf,UACGoB,KAAKT,aAAa,GAClBS,KAAKT,aAAa,GAClBS,KAAKT,aAAa,MAErB,sBAAKX,UAAU,YAAf,UACGoB,KAAKT,aAAa,GAClBS,KAAKT,aAAa,GAClBS,KAAKT,aAAa,MAErB,sBAAKX,UAAU,YAAf,UACGoB,KAAKT,aAAa,GAClBS,KAAKT,aAAa,GAClBS,KAAKT,aAAa,a,GAlDTU,IAAMC,WAyDpBC,E,uKAGF,OADAC,MAAM,oBAEJ,sBAAKxB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,MAEF,sBAAKH,UAAU,YAAf,UACE,wBACA,iC,GAVSqB,IAAMC,WAmBzBG,IAASC,OACP,cAACH,EAAD,IACAI,SAASC,eAAe,W","file":"static/js/main.7d298bd7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst calculateWinner = (squares)=>{\n  const lines = [\n  [0,1,2],\n  [3,4,5],\n  [6,7,8],\n  [0,4,8],\n  [0,3,6],\n  [1,4,7],\n  [2,5,8],\n  [2,4,6]\n  ]\n  for(let i=0; i<lines.length; i++){\n    const [a,b,c] = lines[i];\n    if(squares[a] && squares[a]===squares[b] && squares[a] === squares[c]){\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nconst Square = (props)=>{\n    return (\n      <button className=\"square\" \n      \t\t  onClick = {props.onClick}\n      >\n        {props.value}\n      </button>\n    );\n}\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      squares: [null, null, null, \n                null, null, null,\n                null, null, null],\n      xisNext: true\n    };\n  }\n\n  handleClick = (i)=>{\n    const squares = this.state.squares.slice();\n    squares[i] = this.state.xisNext?\"X\":\"O\";\n    this.setState({squares:squares, \n                   xisNext: !this.state.xisNext});\n  }\n\n  renderSquare = (i)=>{\n    return (<Square \n              value={this.state.squares[i]}\n              onClick = {()=>{this.handleClick(i)}}\n            />);\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if(winner){\n        status = `${winner} is winner`;\n    } else{\n        status = `Next Player: ${this.state.xisNext?\"X\":\"O\"}`;\n    }\n    \n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    alert(\"Work in progress\");\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}