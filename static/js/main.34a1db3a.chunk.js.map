{"version":3,"sources":["components/Button.js","components/Square.js","components/Board.js","components/Game.js","index.js"],"names":["Button","props","className","onClick","value","Square","Board","renderSquare","i","squares","this","React","Component","calculateWinner","lines","length","a","b","c","Game","showMove","setState","displayMove","state","restartGame","history","stepNumber","xisNext","jumpTo","step","handleClick","slice","concat","status","current","winner","moves","map","move","desc","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34a1db3a.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Button = (props)=>{\n  return(\n      <button className = {props.className}\n            onClick = {props.onClick}\n      >\n        {props.value}\n      </button>\n  );\n}\n\nexport default Button;","import React from 'react';\nimport Button from './Button';\n\nconst Square = (props)=>{\n    return (\n        <Button className = \"square\"\n                onClick = {props.onClick}\n                value = {props.value}\n        />\n    );\n}\n\nexport default Square;","import React from 'react';\nimport Square from './Square';\n\nclass Board extends React.Component {\n\n  renderSquare = (i)=>{\n    return (<Square \n              value={this.props.squares[i]}\n              onClick = {()=>{this.props.onClick(i)}}\n            />);\n  }\n\n  render() { \n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;","import React from 'react';\nimport Board from './Board';\nimport Button from './Button';\n\nconst calculateWinner = (squares)=>{\n  const lines = [\n  [0,1,2],\n  [3,4,5],\n  [6,7,8],\n  [0,4,8],\n  [0,3,6],\n  [1,4,7],\n  [2,5,8],\n  [2,4,6]\n  ]\n  for(let i=0; i<lines.length; i++){\n    const [a,b,c] = lines[i];\n    if(squares[a] && squares[a]===squares[b] && squares[a] === squares[c]){\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nclass Game extends React.Component {\n  constructor(props){\n\t    super(props);\n\t    this.state = {\n\t      history:[\n\t        {\n\t          squares: [null,null,null,\n\t                    null,null,null,\n\t                    null,null,null]\n\t        }\n\t      ],\n\t      stepNumber:0,\n\t      xisNext: true,\n\t      displayMove: false,\n\n\t    };\n  }\n\n  showMove = ()=>{\n  \t\tthis.setState({\n      \t\tdisplayMove: this.state.displayMove?\n                      false : true,\n    })\n  }\n  \n\n  restartGame = ()=>{\n      this.setState({\n        history:[\n        {\n          squares: [null,null,null,\n                    null,null,null,\n                    null,null,null]\n        }\n      ],\n        stepNumber:0,\n        xisNext: true\n      });\n  }\n\n  jumpTo = (step)=>{\n      this.setState({\n        stepNumber: step,\n        xisNext: (step%2)===0,\n      })\n  }\n\n  handleClick = (i)=>{\n\t    const history = this.state.history.slice(0, this.state.stepNumber+1);\n\t    const current = history[history.length-1];\n\t    const squares = current.squares.slice();\n\t    if(!calculateWinner(squares) && !squares[i]){\n\t      squares[i] = this.state.xisNext?\"X\":\"O\";\n\t      this.setState({history:history.concat({\n\t                        squares: squares\n\t                    }),\n\t                    stepNumber:history.length,\n\t                    xisNext: !this.state.xisNext,\n\t                  });\n\t    }\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    let status;\n    if(winner){\n        status = <span>{winner} is winner!! &#129395; &#x1F389; &#x1F389; &#x1F389;</span>;\n    } else if(current.squares.length===this.state.stepNumber){\n        status = `Draw`;\n    }\n    else{\n        status = `Next Player: ${this.state.xisNext?\"X\":\"O\"}`;\n    }\n\n    const moves = history.map((step, move)=>{\n                      const desc = move?\n                                   move===this.state.stepNumber?`Move #${move}`:\n                                   `Go to move #${move}`:\n                                   `Go to game start`;\n                      return (<li key={move}>\n                                  <Button \n                                      className = {move===this.state.stepNumber?\n                                              \"activeHistoryBtn\":\"historyBtn\"}\n                                      onClick = {()=>{this.jumpTo(move)}}\n                                      value = {desc}\n                                  />\n                              </li>);\n                  });\n\n    return (\n      <>\n        <h1>Tic-Tac-Toe</h1>\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n                onClick = {(i)=>{this.handleClick(i)}}\n                squares = {current.squares} \n            />\n            <Button className = \"replayBtn\"\n                    onClick = {this.restartGame}\n                    value = \"Replay\"\n            />\n          </div>\n          <div className=\"game-info\">\n            <div className=\"game-status\">{status}</div>\n            <Button className = \"showHistoryBtn\"\n                    onClick = {this.showMove}\n                    value={this.state.displayMove?\n                            \"Hide Moves\":\n                            \"Show Moves\"}\n            />\n            <ol className={this.state.displayMove?\n                            \"showHistory\":\n                            \"hideHistory\"}>\n                {moves}\n            </ol>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/Game';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}