{"version":3,"sources":["index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","props","className","onClick","value","Board","renderSquare","this","React","Component","Game","restartGame","setState","stepNumber","xisNext","jumpTo","step","handleClick","history","state","slice","concat","status","current","winner","moves","map","move","desc","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56fe1e94.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst calculateWinner = (squares)=>{\n  const lines = [\n  [0,1,2],\n  [3,4,5],\n  [6,7,8],\n  [0,4,8],\n  [0,3,6],\n  [1,4,7],\n  [2,5,8],\n  [2,4,6]\n  ]\n  for(let i=0; i<lines.length; i++){\n    const [a,b,c] = lines[i];\n    if(squares[a] && squares[a]===squares[b] && squares[a] === squares[c]){\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nconst Square = (props)=>{\n    return (\n      <button className=\"square\" \n      \t\t  onClick = {props.onClick}\n      >\n        {props.value}\n      </button>\n    );\n}\n\nclass Board extends React.Component {\n\n  renderSquare = (i)=>{\n    return (<Square \n              value={this.props.squares[i]}\n              onClick = {()=>{this.props.onClick(i)}}\n            />);\n  }\n\n  render() { \n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      history:[\n        {\n          squares: [null,null,null,\n                    null,null,null,\n                    null,null,null]\n        }\n      ],\n      stepNumber:0,\n      xisNext: true\n    };\n  }\n\n  restartGame = ()=>{\n      this.setState({\n        stepNumber:0,\n        xisNext: true\n      });\n  }\n\n  jumpTo = (step)=>{\n      this.setState({\n        stepNumber: step,\n        xisNext: (step%2)===0,\n      })\n  }\n\n  handleClick = (i)=>{\n    const history = this.state.history.slice(0, this.state.stepNumber+1);\n    const current = history[history.length-1];\n    const squares = current.squares.slice();\n    if(!calculateWinner(squares) && !squares[i]){\n      squares[i] = this.state.xisNext?\"X\":\"O\";\n      this.setState({history:history.concat({\n                        squares: squares\n                    }),\n                    stepNumber:history.length,\n                    xisNext: !this.state.xisNext,\n                  });\n    }\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    let status;\n    if(winner){\n        status = <span>{winner} is winner!! &#129395; &#x1F389; &#x1F389; &#x1F389;</span>;\n    } else{\n        status = `Next Player: ${this.state.xisNext?\"X\":\"O\"}`;\n    }\n\n    const moves = history.map((step, move)=>{\n                      const desc = move?\n                                   move===this.state.stepNumber?`Move #${move}`:\n                                   `Go to move #${move}`:\n                                   `Go to game start`;\n                      return (<li key={move}>\n                                  <button \n                                      className = {move===this.state.stepNumber?\n                                              \"activeHistoryBtn\":\"historyBtn\"}\n                                      onClick = {()=>{this.jumpTo(move)}}\n                                  >{desc}</button>\n                              </li>);\n\n                  });\n\n    return (\n      <>\n        <h1>Tic-Tac-Toe</h1>\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n                onClick = {(i)=>{this.handleClick(i)}}\n                squares = {current.squares} \n            />\n            <button \n              className=\"replayBtn\"\n              onClick = {this.restartGame}\n            >\n                Replay\n            </button> \n          </div>\n          <div className=\"game-info\">\n            <div className=\"game-status\">{status}</div>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}